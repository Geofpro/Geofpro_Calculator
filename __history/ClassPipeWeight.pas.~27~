unit ClassPipeWeight;

interface

uses SysUtils, Dialogs, Classes;

type
    TPipeWeight = class
private
    FNamePipe: String;  // поле название секции
    FPipeWeight : Real; // вес секции в воздухе, кН
    FPipeMass : Real; // масса секции, кг
    FMassi : Real; // масса одного метра трубы
    FMassConnector : Real; // масса муфты
    FMass2Thickening : Real; // масса двух высадок
    FSectionLength : Real; // длина секции
    FPipeLenght : Real; // длина одной трубы
    FConnectorLenght : Real; // длина
 public
 property NamePipe: string read FNamePipe write FNamePipe;

 property PipeWeigh: Real read FPipeWeight write FPipeWeight;


 property Massi: Real read FMassi write FMassi;
 property MassC: Real read FMassConnector write FMassConnector;
 property Mass2t: Real read FMass2Thickening write FMass2Thickening;
 property LenghtS: Real read FSectionLength write FSectionLength;
 property LenghtP: Real read FPipeLenght write FPipeLenght;
 property LenghtC: Real read FConnectorLenght write FConnectorLenght;



 procedure InputData ( Mi, Mc, M2t, Ls, Lp, Lc : Real; Np : String);
 procedure SectionMass(ValueA: Real);
 property PipeMass: Real read FPipeMass write SectionMass;
 procedure GFPShowMessage;


 constructor Create;


    end;

implementation

// класс выполняет расчёт массы и веса элементов бурильной колонны
// процедура  InputData преднозначена для обращения к свойствам класса, и
// служит для передачи данных для расчёта объекту класса


{ TPipeWeight }

constructor TPipeWeight.Create;
begin
  //InputData;
  //GFPShowMessage;
end;

procedure TPipeWeight.GFPShowMessage;
begin
 ShowMessage('Выполнено: Расчёт массы колонны'+ NamePipe+ ' '+ FloatToStr(Massi) );
end;

procedure TPipeWeight.InputData(Mi, Mc, M2t, Ls, Lp, Lc : Real; Np: String);
  // импорт данных для расчёта
begin
  NamePipe:=Np;
  Massi:=Mi;
  MassC:=Mc;
  Mass2T:=M2t;
  LenghtS:=Ls;
  LenghtP:=Lp;
  LenghtC:=Lc;
end;

procedure TPipeWeight.SectionMass(ValueA:Real);
begin
  FPipeMass := Massi*LenghtS;
  //ShowMessage(FloatToStr(ValueA));
end;

end.
