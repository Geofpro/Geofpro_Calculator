unit pcmenu;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.ComCtrls,
  Vcl.Imaging.pngimage, Vcl.Grids, ExportExcelFile;

type
  TFpcmenu = class(TForm)
    Panel1: TPanel;
    Popen: TPanel;
    Psave: TPanel;
    Pperson: TPanel;
    Pbit: TPanel;
    Pmud: TPanel;
    Panel2: TPanel;
    Pminimaized: TPanel;
    PageControl1: TPageControl;
    TabBit: TTabSheet;
    TabMud: TTabSheet;
    Label1: TLabel;
    Ebit: TEdit;
    Label2: TLabel;
    CheckBit: TCheckBox;
    Eminpipe: TEdit;
    Label5: TLabel;
    Label6: TLabel;
    Erad: TEdit;
    TabSave: TTabSheet;
    OpenDialog1: TOpenDialog;
    SaveDialog1: TSaveDialog;
    MemoSave: TMemo;
    Pexit: TPanel;
    Memo1: TMemo;
    TabMenu: TTabSheet;
    Pmenu: TPanel;
    Pelements: TPanel;
    Memo2: TMemo;
    CheckMud: TCheckBox;
    SGFactors: TStringGrid;
    CheckBoxHint: TCheckBox;
    PExcel: TPanel;
    procedure LcloseClick(Sender: TObject);
    procedure PpersonClick(Sender: TObject);
    procedure PpersonMouseLeave(Sender: TObject);
    procedure PpersonMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure PopenMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure PopenMouseLeave(Sender: TObject);
    procedure PminimaizedClick(Sender: TObject);
    procedure PminimaizedMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure PminimaizedMouseLeave(Sender: TObject);
    procedure PsaveMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure PsaveMouseLeave(Sender: TObject);
    procedure PbitMouseMove(Sender: TObject; Shift: TShiftState; X, Y: Integer);
    procedure PbitMouseLeave(Sender: TObject);
    procedure PmudMouseMove(Sender: TObject; Shift: TShiftState; X, Y: Integer);
    procedure PmudMouseLeave(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure PbitClick(Sender: TObject);
    procedure PmudClick(Sender: TObject);
    procedure PopenClick(Sender: TObject);
    procedure PsaveClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure PexitClick(Sender: TObject);
    procedure PmenuClick(Sender: TObject);
    procedure PmenuMouseLeave(Sender: TObject);
    procedure PmenuMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure PexitMouseLeave(Sender: TObject);
    procedure PexitMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure PelementsClick(Sender: TObject);
    procedure PelementsMouseLeave(Sender: TObject);
    procedure PelementsMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure CheckBoxHintClick(Sender: TObject);
    procedure PExcelMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure PExcelMouseLeave(Sender: TObject);
    procedure PExcelClick(Sender: TObject);
  private
    { Private declarations }

  public
    { Public declarations }
  end;

var
  Fpcmenu: TFpcmenu;
  ExcelExport: TExportExcelFileGo;

implementation

{$R *.dfm}

// Класс TFpcmenu содержин меню для управления программой

uses geofpro, user_person, pipe_calculator, referenсe, TableOfElements,
  ProjectionEXL, formdate;

procedure TFpcmenu.CheckBoxHintClick(Sender: TObject);
// видимость подсказок для кнопок главной формы
begin
  case CheckBoxHint.State of
   cbUnchecked:
   begin
    Fcalculator3i.Image3.ShowHint := False;
    Fcalculator3i.Image4.ShowHint := False;
    Fcalculator3i.Image7.ShowHint := False;
    Fcalculator3i.Image10.ShowHint := False;
    Fcalculator3i.Image8.ShowHint := False;
    Fcalculator3i.Image6.ShowHint := False;
    Fcalculator3i.Image9.ShowHint := False;
    Fcalculator3i.Image5.ShowHint := False;
   end;
   cbChecked:
   begin
    Fcalculator3i.Image3.ShowHint := True;
    Fcalculator3i.Image4.ShowHint := True;
    Fcalculator3i.Image7.ShowHint := True;
    Fcalculator3i.Image10.ShowHint := True;
    Fcalculator3i.Image8.ShowHint := True;
    Fcalculator3i.Image6.ShowHint := True;
    Fcalculator3i.Image9.ShowHint := True;
    Fcalculator3i.Image5.ShowHint := True;
   end;
 end;
end;

procedure TFpcmenu.FormActivate(Sender: TObject);
begin
  //TabBit.Visible:=False;
  //TabMud.Visible:=False;
end;

procedure TFpcmenu.FormCreate(Sender: TObject);
begin
  TabBit.Tabvisible:=False;
  TabMud.Tabvisible:=False;
  TabSave.Tabvisible:=False;
  TabMenu.TabVisible:=False;
  TabMenu.Visible:=True;

  SGFactors.ColWidths[0] := 300;
  SGFactors.ColWidths[1] := 130;

  SGFactors.Cells[0,0]:='Наименование фактора';
  SGFactors.Cells[1,0]:='Значение';

  SGFactors.Cells[0,1]:='Плотность бурового раствора, кг/м куб';
  SGFactors.Cells[0,2]:='Kfr';
  SGFactors.Cells[0,3]:='Ki';
  SGFactors.Cells[0,4]:='Kb';
  // значения коэффициентов
  SGFactors.Cells[1,1]:='1240';
  SGFactors.Cells[1,2]:='0,15';
  SGFactors.Cells[1,3]:='1,1';
  SGFactors.Cells[1,4]:='1,1';

end;

procedure TFpcmenu.LcloseClick(Sender: TObject);
begin
  Geofpro3i.Close;
end;

procedure TFpcmenu.PexitClick(Sender: TObject);
begin
    Geofpro3i.Close;
end;

procedure TFpcmenu.PexitMouseLeave(Sender: TObject);
begin
  Pexit.Color:=$00A28A2D;
end;

procedure TFpcmenu.PexitMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Pexit.Color:=$00736220;
end;

procedure TFpcmenu.PmenuClick(Sender: TObject);
begin
  TabMud.Visible:=False;
  TabBit.Visible:=False;
  TabMenu.Visible:=True;
end;

procedure TFpcmenu.PmenuMouseLeave(Sender: TObject);
begin
 Pmenu.Color:=$00A28A2D;
end;

procedure TFpcmenu.PmenuMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Pmenu.Color:=$00736220;
end;

procedure TFpcmenu.PelementsClick(Sender: TObject);
begin
 FTableOfElements.Show;
end;

procedure TFpcmenu.PelementsMouseLeave(Sender: TObject);
begin
  Pelements.Color:=$00A28A2D;
end;

procedure TFpcmenu.PelementsMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
 Pelements.Color:=$00736220;
end;

procedure TFpcmenu.PExcelClick(Sender: TObject);
begin
  ExcelExport:=TExportExcelFileGo.Create;
  ExcelExport.Free;
end;

procedure TFpcmenu.PExcelMouseLeave(Sender: TObject);
begin
  PExcel.Color:=$00A28A2D;
end;

procedure TFpcmenu.PExcelMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
    PExcel.Color:=$00736220;
end;

procedure TFpcmenu.PbitClick(Sender: TObject);
begin
 TabBit.Visible:=True;
 TabMud.Visible:=False;
 TabMenu.Visible:=False;
end;

procedure TFpcmenu.PbitMouseLeave(Sender: TObject);
begin
  Pbit.Color:=$00A28A2D;
end;

procedure TFpcmenu.PbitMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Pbit.Color:=$00736220;
end;

procedure TFpcmenu.PminimaizedClick(Sender: TObject);
begin
  Fpcmenu.Close;
end;

procedure TFpcmenu.PminimaizedMouseLeave(Sender: TObject);
begin
  Pminimaized.Color:=$00A28A2D;
end;

procedure TFpcmenu.PminimaizedMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
 Pminimaized.Color:=$00736220;
end;

procedure TFpcmenu.PmudClick(Sender: TObject);
begin
  TabMud.Visible:=True;
  TabBit.Visible:=False;
  TabMenu.Visible:=False;
end;

procedure TFpcmenu.PmudMouseLeave(Sender: TObject);
begin
 Pmud.Color:=$00A28A2D;
end;

procedure TFpcmenu.PmudMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Pmud.Color:=$00736220;
end;

procedure TFpcmenu.PopenClick(Sender: TObject);
// открываем файл
 var cols, rows, i : Integer;
begin
 // очищаем расчётную таблицу
 Fcalculator3i.ClearTable;
 // очищаем результаты предыдущего расчёта
 Fcalculator3i.SG2clear;

 with OpenDialog1, MemoSave do
  if OpenDialog1.Execute then
  begin
    Lines.LoadFromFile(FileName);
    // добавляем название файла в заголовок формы
    Fcalculator3i.Caption:= 'GEOFPRO - Расчёт веса бурильных труб - '+ FileName;
    //кол-во строк StringGrid1 (таблица главного окна)
    Fcalculator3i.EGridRows.Text := MemoSave.Lines[49];
    Fcalculator3i.StringGrid1.RowCount:=StrToInt(Fcalculator3i.EGridRows.Text);
     i:=0;
         for cols := 0 to 12 do
          begin
             for rows := 1 to StrToInt(Fcalculator3i.EGridRows.Text) do
             begin
              Fcalculator3i.StringGrid1.Cells[cols,rows]:= MemoSave.Lines[50+i];
              i:=i+1;
            end;
         end;

         // имя пользователя, скажина и т.д персонализация пользователя, строки 0-7
         for rows :=0 to 7 do
         begin
          FUser_person.StringGrid1.Cells[1, 1+rows]:= MemoSave.Lines[rows];
         end;

         //имя пользователя
         Geofpro3i.Euserlog.Text:=FUser_person.StringGrid1.Cells[1,1];

        //  коэффициенты, строки 8-11
        for rows :=1 to 4 do
         begin
           Fpcmenu.SGFactors.Cells[1, rows]:= MemoSave.Lines[7+rows];
         end;

         // диаметр долота
        Fpcmenu.Ebit.Text:= MemoSave.Lines[12];

        // минимальный внутренний диаметр установленной обсадной колонны, мм
        Eminpipe.Text:=MemoSave.Lines[18];

        // минимально допустимый зазор между диаметром скважины и диаметром севажинного инструмента
        Erad.Text:=MemoSave.Lines[19];


  end;

  // обновляем таблицу ввода данных
  Fcalculator3i.ClearColor;
end;

procedure TFpcmenu.PopenMouseLeave(Sender: TObject);
begin
 Popen.Color:=$00A28A2D;
end;

procedure TFpcmenu.PopenMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Popen.Color:=$00736220;
end;

procedure TFpcmenu.PpersonClick(Sender: TObject);
begin
  FUser_person.Show;
end;

procedure TFpcmenu.PpersonMouseLeave(Sender: TObject);
begin
  Pperson.Color:= $00A28A2D;
end;

procedure TFpcmenu.PpersonMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
 Pperson.Color:=$00736220;
end;

procedure TFpcmenu.PsaveClick(Sender: TObject);
 // сохраняем расчёт в текстовый файл
  var cols, rows, i : Integer;
begin
   // очищаем MemoSave
   for i := 0 to MemoSave.Lines.Count do
   begin
     MemoSave.Lines.Delete(i);
   end;

   // устанавливаем количество строк в Memo
   for i := 0 to (StrToInt(Fcalculator3i.EGridRows.Text)*12)+50 do
       begin
         MemoSave.Lines.Add('') ;
       end;

 with SaveDialog1, MemoSave do
  if SaveDialog1.Execute then
   begin
     // сохраняем количество строк в расчётной таблице
     MemoSave.Lines[49] := Fcalculator3i.EGridRows.Text;
     // сохраняем данные основной расчётной таблицы, строки 50+
       i:=0; // счётчик количества дополняемых строк в MemoSave
       for cols := 0 to 12 do
          begin
             for rows := 1 to StrToInt(Fcalculator3i.EGridRows.Text) do
             begin
             MemoSave.Lines[50+i]:=Fcalculator3i.StringGrid1.Cells[cols,rows];
             i:=i+1;
            end;
         end;

       // имя пользователя, скажина и т.д персонализация пользователя, строки 0-7
         for rows :=0 to 7 do
         begin
          MemoSave.Lines[rows]:=FUser_person.StringGrid1.Cells[1, 1+rows];
         end;

        //  коэффициенты, строки 8-11
        for rows :=1 to 4 do
         begin
           MemoSave.Lines[7+rows]:=Fpcmenu.SGFactors.Cells[1, rows];
         end;

         // диаметр долота
        MemoSave.Lines[12]:=Fpcmenu.Ebit.Text;

        // длина колонны, м

        MemoSave.Lines[13]:=Fcalculator3i.ELdrill.Text;

        // масса бурильной колонны, тонны
        MemoSave.Lines[14]:=Fcalculator3i.Etonne.Text;

        // вес бурильной колонны, кН
        MemoSave.Lines[15]:=Fcalculator3i.EkN.Text;

        // имя файла с профилем
        MemoSave.Lines[16]:= FrmProjectionEXL.ENameFile.Text;

        // дата изменения записи
        MemoSave.Lines[17]:=DateToStr(Fformdate.DateTimePicker1.Date);

        // минимальный внутренний диаметр установленной обсадной колонны, мм
        MemoSave.Lines[18]:= Eminpipe.Text;

        // минимально допустимый зазор между диаметром скважины и диаметром севажинного инструмента
        MemoSave.Lines[19]:= Erad.Text;

    Lines.SaveToFile(FileName);
    OpenDialog1.FileName := FileName;//Чтобы исправленный текст не затёр источник
   end;
end;

procedure TFpcmenu.PsaveMouseLeave(Sender: TObject);
begin
  Psave.Color:= $00A28A2D;
end;

procedure TFpcmenu.PsaveMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
   Psave.Color:=$00736220;
end;



end.
